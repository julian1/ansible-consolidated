
# OK - the mist, or geth etc - need to be on the client side...
# we should just look at the source and see if we can see connection.
# the node
# so we need to have a local instance - or port forwarded instance.

# important, we may be able to do a port-forward - for the rpc interface to a parity running in cloud
# or even, iptables to map to infura etc.

- hosts: all
  vars_files:
    - ../../vars/credentials.yml
  vars:

  pre_tasks:
    - user: name=meteo shell=/bin/bash
    - file: path=/home/meteo mode=0700
    - authorized_key: user=meteo key="{{meteo_pubkey}}"

  roles:
    - admin/devenv-lite

    - name: misc/rust
      user: meteo

    - name: crypto/parity
      build_dir: /home/meteo/parity
      user: meteo

    - name: misc/node
      deploy_path: /home/meteo

    - name: crypto/web3
      user: meteo

#    - name: crypto/solidity
#      user: meteo
#      tags: solidity

    #- crypto/geth

  tasks:
    - copy:
        dest: /home/meteo/.bash_aliases
        content: |
          # deployed by ansible!

          PATH="$HOME/parity/target/release:$PATH"
          PATH="$HOME/node-v6.11.0-linux-x64/bin:$PATH"
          PATH="$HOME/solidity/build/solc:$PATH"
          PATH="$HOME/solidity/build/lllc:$PATH"

          PATH="$HOME/.meteor:$PATH"

          export PATH
      tags: path

  # hmmn, if we just set-up a local parity it might work out of the box...

  # did not
  # curl https://install.meteor.com/ | sh
  # npm install  meteor-build-client

