
- hosts: dell-home
  vars_files:
    - ../../vars/credentials.yml
  vars:
    - users:
      - { name: meteo, group: adm, pubkey: "{{meteo_pubkey}}", home_dir: /home/meteo }
    - printer:
        name: Brother
        url: socket://brother.localnet:9100
        ppd: BRHL16_2_GPL.ppd
    - apt:
        mirror: http://mirror.internode.on.net/pub/debian
        version: testing

  pre_tasks:
    - copy:
        dest: /etc/apt/sources.list
        mode: 0644
        content: |
          # deployed by ansible
          deb {{apt.mirror}} {{apt.version}} main
          deb-src {{apt.mirror}} {{apt.version}} main

          deb http://security.debian.org/ {{apt.version}}/updates main
          deb-src http://security.debian.org/ {{apt.version}}/updates main

          deb {{apt.mirror}} {{apt.version}}-updates main
          deb-src {{apt.mirror}} {{apt.version}}-updates main

          # firmware
          # as written, this generates conflicts
          # deb http://http.us.debian.org/debian/ {{apt.version}} non-free contrib
          deb {{apt.mirror}} {{apt.version}} non-free contrib

          # jessie - for gcc-arm-none-eab - may not need anymore?
          # TODO change to stretch?
          deb {{apt.mirror}} jessie main
          deb-src {{apt.mirror}} jessie main

    # http://unix.stackexchange.com/questions/107689/how-to-install-a-single-jessie-package-on-wheezy
    # TODO does this need a number in the name to force order?
    - copy:
        dest: /etc/apt/apt.conf.d/default-release
        content: |
          # deployed by ansible
          APT::Default-Release "testing";


    # see, https://askubuntu.com/questions/689070/network-interface-name-changes-after-update-to-15-10-udev-changes
    # using persistent-net is still valid..
    # even though the original generator file is no longer used...
    - copy:
        dest: /etc/udev/rules.d/70-persistent-net.rules
        content: |
          # deployed by ansible!
          # This file was automatically generated by the /lib/udev/write_net_rules
          # program, run by the persistent-net-generator.rules rules file.
          #
          # You can modify it, as long as you keep each rule on a single
          # line, and change only the value of the NAME= key.

          # PCI device 0x10ec:/sys/devices/pci0000:00/0000:00:1c.3/0000:03:00.1 (r8169)
          SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="b8:2a:72:c9:fe:d2", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

          # PCI device 0x8086:0x08b1 (iwlwifi)
          SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="f8:16:54:1c:9e:90", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="wlan*", NAME="wlan0"


  roles:
    # stretch
    - admin/apt/update
    - admin/timezone
    - admin/locale
    - { role: dotfiles, tags: [ 'dotfiles' ] }
    - { role: vim, tags: [ 'vim' ] }
    - xmonad
    - { role: admin/printer, tags: [ 'printer' ] }

    # - ip-forwarding
    #- admin/common
    # - admin/zfs

  tasks:
    - hostname: name=dell-home

    - apt: name=memtest86

    - apt: name=wireless-tools  # iwconfig - useful to check wlan1 state
    - apt: name=iw


    #####
    - apt: name=alsa-oss
    - apt: name=alsa-utils
    - apt: name=alsa-tools

    - copy:
        dest: /etc/modprobe.d/alsa-base.conf
        content: |
          # deployed by ansibl
          # http://darmawan-salihun.blogspot.com.au/2015/02/intel-pch-haswell-sound-alsa-problem.html
          # Intel PCH
          options snd-hda-intel index=0 enable=1 vid=8086 pid=9c20
          # Intel HDMI
          # test using: speaker-test -c 2 -D hdmi:HDMI
          options snd-hda-intel index=2 enable=1 vid=8086 pid=0a0c
          # hardware beep off
          options snd_hda_intel beep_mode=0
          blacklist pcspkr
      notify: reboot



      # command: bash -c "/usr/sbin/alsactl"
      # not sure if this should be with store or init
    - command: /usr/sbin/alsactl
      args:
        creates: /var/lib/alsa/asound.state
      notify: reboot

    # create home for scripts
    - file: path=/home/meteo/scripts state=directory mode=777
      tags: whoot

    ####
    - copy:
        dest: /home/meteo/scripts/proxy.sh
        mode: 0777
        content: |
          # deployed by ansible!
          ssh -N -v  -D 5222  admin@proxy
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/restart-wifi.sh
        mode: 0777
        content: |
          # deployed by ansible!
          # not used for a long time... now using wicd-curses
          ifconfig wlan0 down
          iwconfig wlan0 essid AP1
          iwconfig wlan0 ap any
          iwconfig wlan0 enc off
          ifconfig wlan0 up
          iwconfig wlan0
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/nuc-share.sh
        mode: 0777
        content: |
          # deployed by ansible!
          sshfs root@nuc:/storage mnt/
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/volume.sh
        mode: 0777
        content: |
          # deployed by ansible!
          # could just use alias
          amixer set Master $1
          amixer set PCM 100%
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/brightness.sh
        mode: 0777
        content: |
          # deployed by ansible!
          # xset -dpms; xset s off
          xrandr --output eDP-1 --brightness $1
      tags: whoot

    # jdk and maven, for freeroute etc
    - copy:
        dest: /home/meteo/scripts/jdk.sh
        content: |
          # deployed by ansible!
          # see plays/misc/jdk-1.8.sh
          export JAVA_HOME="$HOME/jdk1.8.0_111/"
          export PATH="$JAVA_HOME/bin:$PATH"

          # see, plays/misc/maven.yml
          export PATH="$PATH:$HOME/apache-maven-3.3.9/bin/"
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/node.sh
        content: |
          # deployed by ansible!

          export PATH="/home/meteo/node-v6.11.0-linux-x64/bin:$PATH"
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/idris.sh
        content: |
          # deployed by ansible!

          export CABAL_BIN="/home/meteo/.cabal/bin"
          export PATH="$CABAL_BIN:$PATH"
      tags: whoot

    - copy:
        dest: /home/meteo/scripts/chromium.sh
        content: |
          #!/bin/bash
          # deployed by ansible!

          chromium \
            --proxy-server='socks5://127.0.0.1:5222'  \
            --host-resolver-rules="MAP * ~NOTFOUND , EXCLUDE 127.0.0.1"
      tags: whoot


    #####
    - copy:
        dest: /home/meteo/.xinitrc
        content: |
          # deployed by ansible!

          # https://raspberrypi.stackexchange.com/questions/752/how-do-i-prevent-the-screen-from-going-blank
          xset s off         # don't activate screensaver
          xset -dpms         # disable DPMS (Energy Star) features.
          xset s noblank     # don't blank the video device
          # xset -dpms; xset s off

          xrdb -merge <<- EOF
            XTerm*selectToClipboard: true
            XTerm*faceName: DejaVu Sans Mono
            ! XTerm*faceSize: 10 ! desktop
            XTerm*faceSize: 15   ! laptop
            XTerm*Background: white
            XTerm*Foreground: black
          EOF

          # keymap
          xmodmap - <<- EOF
            ! numpad insert

            keycode 90 = Insert NoSymbol Insert

            ! next and prev
            !  = Prior NoSymbol Prior
            !  = Next NoSymbol Next

            ! page up
            keycode 91 =  Up NoSymbol Up

            ! page down
            keycode 104 = Down NoSymbol Down

            ! numpad 2
            keycode 88 =  Home NoSymbol Home

            ! numpad 3
            keycode 89  = End  NoSymbol End
          EOF

          # brightness
          xrandr --output eDP1 --brightness .45

          # to turn on trackpad tap to select/button
          synclient TapButton1=1

          # turn bell off
          xset b off

          # start xmonad
          xmonad
      tags: xinitrc

    #####
    - apt: name=bridge-utils

    - copy:
        dest: /etc/network/interfaces
        # backup: yes
        content: |
          # deployed by ansible
          auto lo
          iface lo inet loopback

          auto br0
          iface br0 inet static
            address 10.1.1.1
            netmask 255.255.255.0
            bridge_ports dummy0
            bridge_stp off
            bridge_fd 0

      # probably should restart all networking
      notify: restart-br0

    # Using local dnsmasq as a wholesale replacement for using resolvconf is a lot simpler
    # issue is we want to ping containers from the host,
    # so make local dns authoritative
    - apt: name=dnsmasq
    - copy:
        dest: /etc/dnsmasq.d/container-dns
        content: |
          # deployed by ansible
          interface=br0
          # log-queries
          log-dhcp
          no-resolv
          # server=8.8.8.8
          # server=192.168.42.1
          server=192.168.43.1
          expand-hosts
          domain=container
          dhcp-range=br0,10.1.1.10,10.1.1.30,4h
          dhcp-host=00:01:04:1b:2C:1A,ethereum,10.1.1.19
          dhcp-host=00:01:04:1b:2C:1B,jessie-test,10.1.1.20
          dhcp-host=00:01:04:1b:2C:1C,ise,10.1.1.21

      notify: restart-dnsmasq

    # IMPORTANT - changes to /etc/resolv.conf, need dnsmasq restart to re-read upstream servers

    # TODO maybe add domain, search?
    - copy:
        dest: /etc/resolv.conf
        content: |
          # deployed by ansible
          # nameserver 127.0.0.1
          nameserver 10.1.1.1

    # http://unix.stackexchange.com/questions/174349/what-overwrites-etc-resolv-conf-on-every-boot
    - copy:
        dest: /etc/dhcp/dhclient-enter-hooks.d/nodnsupdate
        mode: 0777
        content: |
          #!/bin/sh
          # deployed by ansible
          make_resolv_conf() {
              :
          }

    - apt: name=iptables-persistent
    - copy:
        dest: /etc/iptables-rules
        content: |
          # deployed by ansible
          iptables -t filter --flush
          iptables -t nat --flush
          iptables -t mangle --flush

          # natting is handled on the router
          # iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
          # iptables -t nat -A PREROUTING -p tcp --dport 80 -i eth0 -j DNAT --to 10.1.1.16
          # iptables -t nat -A POSTROUTING -s '10.1.1.0/24' -j MASQUERADE

          # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=717217
          # TODO - fill in checksums for all udp...
          iptables -t mangle -A POSTROUTING -p udp --dport bootpc -j CHECKSUM --checksum-fill

          # FIXME uggh... had to run interactive and select yes to force overwrite of /etc/iptables/rules.v4 ...
          # dpkg-reconfigure iptables-persistent
      notify: reconfigure-iptables

    #####
    # Support bridge addif for qemu
    # tunctl from uml-utilities only needed for permissions, not strictly needed
    - apt: name=uml-utilities
    - copy:
        dest: /etc/qemu-ifup
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          echo "i am $(whoami)"
          switch=br0
          if [ -n "$1" ];then
              # has to be run as root...
              # tunctl -u `whoami` -t $1
              ip link set $1 up
              sleep 0.5s
              brctl addif $switch $1
              exit 0
          else
              ECHO "Error: no interface specified"
              exit 1
          fi

    - copy:
        dest: /etc/qemu-ifdown
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          switch=br0
          if [ -n "$1" ];then
              # permissions...
              brctl delif $switch $1
              ip link delete $1
              exit 0
          else
              echo "Error: no interface specified"
              exit 1
          fi

    #####
    - apt: name=dnsutils
    - apt: name=ethtool
    - apt: name=ffmpeg
    - apt: name=a2ps



    - copy:
        dest: /etc/udev/rules.d/80-ttyusb.rules
        content: |
          # deployed by ansible!
          # ftdi device
          KERNEL=="ttyUSB0", MODE="0666"


    - copy:
        dest: /etc/udev/rules.d/99-stlink.rules
        content: |
          # deployed by ansible!
          # for stm32
          ATTRS{idVendor}=="0483", ATTRS{idProduct}=="3748", MODE="0666"


  handlers:
    - include: ../roles/common/handlers/main.yml


