
# TODO avoid /ansible since it is only a small root partition

- hosts: dell-work
  vars_files:
    - ../vars/credentials.yml
  vars:
    - printer:
        name: ImosLexmark
        url: socket://10.76.8.20:9100
        ppd: lexmark.ppd
    - users:
      # no root, because not on zfs/encrypted partition
      - { name: meteo, group: adm, pubkey: "{{meteo_pubkey}}", home_dir: /home/meteo }

    - jdk_deploy_path:      /home/meteo/imos
    - grails_deploy_path:   /home/meteo/imos
    - intellij_deploy_path: /home/meteo/imos

  roles:
    - testing
    - apt-update
    - timezone
    - locale
    - common
    - users
    - { role: dotfiles, tags: [ 'whoot' ] }
    - vim
    - xmonad
    - ip-forwarding   # move into common? or make explicit, it's just a line.
    - printer

  # TODO jdk, grails, intelij should be factored into roles
  # - not necessarily. simple tasks are fairly easy to manage...
  # - roles factor common code amongst nodes and have cleaner relative path semantics


  tasks:
    - hostname: name=dell-work

    #####
    - apt: name=memtest86

    #####
    - apt: name=alsa-oss
    - apt: name=alsa-utils
    - apt: name=alsa-tools

    - copy:
        dest: /etc/modprobe.d/alsa-base.conf
        content: |
          # deployed by ansible!
          # hdmi and cth reversed
          options snd_hda_intel enable=0,1

          # hardware beep off
          options snd_hda_intel beep_mode=0
          blacklist pcspkr
      notify: reboot



    - name: Initialize alsa
      # command: bash -c "/usr/sbin/alsactl"
      command: /usr/sbin/alsactl
      args:
        creates: /var/lib/alsa/asound.state
      notify: reboot

    #####
    - apt: name=firmware-iwlwifi

    - modprobe: name=iwlwifi state=present

    # TODO make idempotent or remove - perhaps ansible has interface module?
    # Not sure we even need, since should bring up automatically
    # -  command: /sbin/ifconfig wlp2s0 up

    - apt: name=wpasupplicant
    - apt: name=wicd-curses

    #####
    - copy:
        dest: /home/meteo/.xinitrc
        content: |
          # deployed by ansible!
          xrdb -merge <<- EOF
            XTerm*selectToClipboard: true
            XTerm*faceName: DejaVu Sans Mono
            XTerm*faceSize: 10 ! desktop
            ! XTerm*faceSize: 15   ! laptop
            XTerm*Background: white
            XTerm*Foreground: black
          EOF

          xmodmap - <<- EOF
            keycode 90 = Insert NoSymbol Insert
          EOF

          # seems to be necessary, to let xorg initialize before adjusting resolution
          sleep 2

          if true; then
            # Warning - turns off laptop display!
            xrandr --output DP-1-1  --auto --mode 1920x1200 --primary
            xrandr --output DP-1-2  --auto --mode 1280x1024 --right-of DP-1-1
            xrandr --output eDP-1   --off
          fi

          # xrandr --output eDP1 --brightness .65
          # xset -dpms; xset s off
          # to turn on trackpad tap to select/button
          synclient TapButton1=1
          xset b off
          # xset q | grep bell
          xmonad


    ####
    - copy:
        dest: /ansible/log-screensaver.sh
        mode: 0777
        content: |
          #!/bin/bash
          # deployed by ansible!
          LOG=/var/log/xtrlock.log

          # handle empty starting file condition
          [ -f "$LOG" ] || echo 'UNKNOWN' >> "$LOG"

          LOCKED=$(pgrep xtrlock)
          CURRENT=$(tail -n 1 "$LOG" | cut -d' ' -f 1) # '

          # echo "LOCKED: $LOCKED, CURRENT: $CURRENT"
          # not locked, and current condition not UNLOCKED
          if [ -z "$LOCKED" ] && [ "$CURRENT" != 'UNLOCKED' ]; then
              echo "UNLOCKED $(date -R)" >> "$LOG"
          fi
          # locked, and current condition is not LOCKED
          if [ -n "$LOCKED" ] && [ "$CURRENT" != 'LOCKED' ]; then
              echo "LOCKED   $(date -R)" >> "$LOG"
          fi

    - copy:
        dest: /var/spool/cron/crontabs/root
        mode: 0600
        content: |
          # deployed by ansible!
          */1 * * * *  /ansible/log-screensaver.sh
    

    ##############################################
    # jdk, grails, etc

    # TODO avoid /ansible since it is only a small root partition
    - include: ../roles/misc/tasks/jdk-1.7.yml
    - include: ../roles/misc/tasks/jdk-1.8.yml
    # TODO separate version numbers,
    - include: ../roles/misc/tasks/grails.yml
    - include: ../roles/misc/tasks/intellij.yml

    ##############################################
    # create home for scripts
    - file: path=/home/meteo/scripts state=directory mode=777
      tags: whoot


    ####

    - copy:
        dest: /home/meteo/scripts/opam.sh
        content: |
          # deployed by ansible!
          . $HOME/.opam/opam-init/init.sh
          #   /home/meteo/.opam/4.02.3/bin
          # . $HOME/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
      tags: whoot


    # start room monitor
    - copy:
        dest: /home/meteo/scripts/start-room-monitor.sh
        mode: 0777
        content: |
          #!/bin/bash
          # deployed by ansible!
          xrandr --output HDMI-1 --auto --mode 1920x1080 --right-of eDP-1
          sleep 1
      tags: whoot


    # restart monitor 2 - eg. rightmost monitor - when it starts blinking,
    - copy:
        dest: /home/meteo/scripts/restart-monitor2.sh
        mode: 0777
        content: |
          #!/bin/bash
          # deployed by ansible!
          xrandr --output DP-1-2  --off
          sleep 1
          xrandr --output DP-1-2  --auto --mode 1280x1024 --right-of DP-1-1
          sleep 1
      tags: whoot

    # brightness.sh
    - copy:
        dest: /home/meteo/scripts/brightness.sh
        mode: 0777
        content: |
          # deployed by ansible!
          xrandr --output eDP-1 --brightness $1
      tags: whoot

    # volume.sh
    - copy:
        dest: /home/meteo/scripts/volume.sh
        content: |
          # deployed by ansible!
          # could just use alias
          amixer set Master $1
      tags: whoot

    # java 1.7 env
    - copy:
        dest: /home/meteo/scripts/jdk-1.7.sh
        content: |
          # deployed by ansible!
          export JAVA_HOME="$HOME/jdk1.7.0_80"
          export PATH="$JAVA_HOME/bin:$PATH"
      tags: whoot

    # java 1.8 env
    - copy:
        dest: /home/meteo/scripts/jdk-1.8.sh
        content: |
          # deployed by ansible!
          export JAVA_HOME="$HOME/jdk1.8.0_111"
          export PATH="$JAVA_HOME/bin:$PATH"
      tags: whoot

    # grails 1.3.7 env
    - copy:
        dest: /home/meteo/scripts/grails-1.3.7.sh
        content: |
          # deployed by ansible!
          export GRAILS_HOME="$HOME/imos/grails-1.3.7/"
          export PATH="$GRAILS_HOME/bin:$PATH"
      tags: whoot

    # grails 2.4.4 env
    - copy:
        dest: /home/meteo/scripts/grails-2.4.4.sh
        content: |
          # deployed by ansible!
          export GRAILS_HOME="$HOME/imos/grails-2.4.4/"
          export PATH="$GRAILS_HOME/bin:$PATH"
      tags: whoot

    # intelij
    - copy:
        dest: /home/meteo/scripts/intellij.sh
        content: |
          # deployed by ansible!
          export JAVA_HOME="$HOME/jdk1.7.0_80"
          export PATH="$JAVA_HOME/bin:$PATH"
          # export INTELLIJ_HOME="$HOME/imos/idea-IU-143.1821.5/"
          export INTELLIJ_HOME="$HOME/imos/idea-IU-171.4424.56/"
          export PATH="$INTELLIJ_HOME/bin:$PATH:"
      tags: whoot


    ##############################################
     

    #####
    - apt: name=bridge-utils

    - copy:
        dest: /etc/network/interfaces
        content: |
          # deployed by ansible!
          # The loopback network interface
          auto lo
          iface lo inet loopback

          # The primary network interface
          allow-hotplug eth0
          iface eth0 inet dhcp

          auto br0
          iface br0 inet static
            address 10.1.1.1
            netmask 255.255.255.0
            bridge_ports dummy0
            bridge_stp off
            bridge_fd 0
      notify: restart-br0

#    # Using local dnsmasq as a wholesale replacement for using resolvconf is a lot simpler
#    # issue is we want to ping containers from the host,
#    # so make local dns authoritative
#    - apt: name=dnsmasq
#    - copy:
#        dest: /etc/dnsmasq.d/localnet
#        content: |
#          # deployed by ansible!
#          interface=br0
#          # log-queries
#          log-dhcp
#          no-resolv
#          server=131.217.0.19
#          server=144.6.0.19
#          expand-hosts
#          domain=localnet
#          dhcp-range=br0,10.1.1.10,10.1.1.30,4h

#          # systemd containers
#          dhcp-host=00:01:04:1b:2C:0A,wordpress,10.1.1.10
#          dhcp-host=00:01:04:1b:2C:0B,geoserver,10.1.1.11
#          dhcp-host=00:01:04:1b:2C:1A,jessie,10.1.1.12
#          dhcp-host=00:01:04:1b:2C:1B,geonetwork2,10.1.1.13
#          dhcp-host=00:01:04:1b:2C:1C,portal,10.1.1.14
#          dhcp-host=00:01:04:1b:2C:1D,aatams,10.1.1.15
#          dhcp-host=00:01:04:1b:2C:1E,rev-proxy,10.1.1.16
#          dhcp-host=00:01:04:1b:2C:1F,geonetwork3,10.1.1.17
#          dhcp-host=00:01:04:1b:2C:10,bind,10.1.1.22

#          # kvm guests
#          dhcp-host=00:01:04:1b:2C:2A,5-aws-syd,10.1.1.18
#          dhcp-host=00:01:04:1b:2C:2B,6-aws-syd,10.1.1.19
#          dhcp-host=00:01:04:1b:2C:2C,win7,10.1.1.20
#          dhcp-host=00:01:04:1b:2C:2D,10-aws-syd,10.1.1.21

#      notify: restart-dnsmasq

# TODO - this doesn't clear the file first
# maybe change nameserver to 127.0.0.1
# also add domain, search?
#    - copy:
#        dest: /etc/resolv.conf
#        content: |
#          # deployed by ansible!
#          nameserver 10.1.1.1
#          # nameserver 10.1.1.22
#          # nameserver 8.8.8.8
#          # nameserver 131.217.0.19   # utas


    # IMPORTANT for complete files not just blocks, could simply use shell maybe with <<-EOF type stuff
    # disable /etc/resolv.conf update on dhcpd
    # http://unix.stackexchange.com/questions/174349/what-overwrites-etc-resolv-conf-on-every-boot
    - copy:
        dest: /etc/dhcp/dhclient-enter-hooks.d/nodnsupdate
        mode: 0777
        content: |
          #!/bin/sh
          # deployed by ansible!
          make_resolv_conf() {
              :
          }



    # cat /proc/sys/net/ipv4/conf/lo/route_localnet
    # sysctl -w net.ipv4.conf.lo.route_localnet=1
    - apt: name=iptables-persistent
    - copy:
        dest: /etc/iptables-rules
        content: |
          # deployed by ansible
          iptables -t filter --flush
          iptables -t nat --flush
          iptables -t mangle --flush

          # redirect to rev-proxy
          # iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
          iptables -t nat -A PREROUTING -p tcp -i eth0          --dport 80 -j DNAT --to 10.1.1.14
          iptables -t nat -A OUTPUT     -p tcp -d 131.217.38.36 --dport 80 -j DNAT --to 10.1.1.14

          # dns/bind/dnsmasq
          # iptables -t nat -A PREROUTING -p tcp -i eth0 --dport 53 -j DNAT --to 10.1.1.22
          # iptables -t nat -A PREROUTING -p udp -i eth0 --dport 53 -j DNAT --to 10.1.1.22

          # this works, except that the containerized bind gets mixes up the interface it thinks its listening on
          # redirect for incoming via prerouting, and for the destination
          # doesn't quite work
          # iptables -t nat -A OUTPUT     -p tcp -d 131.217.38.36 --dport 53 -j DNAT --to 10.1.1.22
          # iptables -t nat -A OUTPUT     -p udp -d 131.217.38.36 --dport 53 -j DNAT --to 10.1.1.22

          # bridge postrouting
          iptables -t nat -A POSTROUTING -s '10.0.0.0/8' -j MASQUERADE

          #####
          # mangle
          # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=717217
          # TODO - fill in checksums for all udp...
          iptables -t mangle -A POSTROUTING -p udp --dport bootpc -j CHECKSUM --checksum-fill
      notify: reconfigure-iptables
      tags: whoot

    # make sure systemd is installed
    - apt: name=systemd-container
      when: (ansible_distribution == "Debian" and ansible_distribution_major_version > "8")

    ######
    - apt: name=debootstrap
    - apt: name=maven
    - apt: name=postgresql-client-9.4
    - apt: name=keepassx
    - apt: name=ethtool



    #####
    # Support bridge addif for qemu
    # tunctl from uml-utilities only needed for permissions, not strictly needed
    - apt: name=qemu-kvm
    - apt: name=uml-utilities

    - copy:
        dest: /etc/qemu-ifup
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          echo "i am $(whoami)"
          switch=br0
          if [ -n "$1" ];then
              # has to be run as root...
              # tunctl -u `whoami` -t $1
              ip link set $1 up
              sleep 0.5s
              brctl addif $switch $1
              exit 0
          else
              ECHO "Error: no interface specified"
              exit 1
          fi

    - copy:
        dest: /etc/qemu-ifdown
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          switch=br0
          if [ -n "$1" ];then
              # permissions...
              brctl delif $switch $1
              ip link delete $1
              exit 0
          else
              echo "Error: no interface specified"
              exit 1
          fi





  # TODO maybe make handlers explicit
  handlers:
    # - include: ../roles/common/handlers/main.yml

    - name: reconfigure-iptables
      command: "{{item}}"
      with_items:
        - sh /etc/iptables-rules
        - dpkg-reconfigure --frontend noninteractive iptables-persistent

    - name: reboot
      command: /sbin/reboot

    - name: restart-br0
      command: sh -c "/sbin/ifdown br0 && /sbin/ifup br0"

    # - name: restart-dnsmasq
    #  service: name=dnsmasq state=restarted

    # maynot be needed if networking is now a play
    - name: restart-bind
      service: name=bind9 state=restarted

    - name: restart-dhcp
      service: name=isc-dhcp-server state=restarted


    # nectar,
    - apt: name=ethtool

    # jq for parsing json
    - apt: name=jq

