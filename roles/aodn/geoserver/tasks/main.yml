

  - apt: name=tomcat7 update_cache=yes

  - set_fact: tomcat7=/var/lib/tomcat7
  - set_fact: conf={{tomcat7}}/conf
  - set_fact: webapps={{tomcat7}}/webapps
  - set_fact: geoserver_config={{conf}}/geoserver-config
  - set_fact: lib={{tomcat7}}/lib
  - set_fact: logs={{tomcat7}}/logs

  # set_fact doesn't seem to handle self-referential facts
  #  - set_fact:
  #      tomcat7: /var/lib/tomcat7


  - file: path={{item}} state=directory owner=tomcat7 group=tomcat7
    with_items:
      - "{{tomcat7}}"
      - "{{webapps}}"
      - "{{lib}}"

  - file: path=/var/log/tomcat7/catalina.out mode=0666

  # use apache/ubuntu connection pool jar. commons has bug, probably class loader
  # related, where pool throws on class load failre of Cursor
  - copy:
      dest: "{{lib}}/tomcat-dbcp.jar"
      src: tomcat-dbcp.jar
      owner: tomcat7
      group: tomcat7

  - copy:
      dest: /etc/default/tomcat7
      backup: yes
      owner: tomcat7
      group: tomcat7
      content: |
        # deployed by ansible!
        TOMCAT7_USER=tomcat7
        TOMCAT7_GROUP=tomcat7
        JAVA_OPTS="${JAVA_OPTS} -DGEOSERVER_DATA_DIR={{geoserver_config}} \
          -Xmx4081m -Xms512m -server -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError \
          -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
    notify: restart-tomcat7

    # factory="org.apache.commons.dbcp.BasicDataSourceFactory"        # debian
    # factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory"    # ubuntu
  - copy:
      dest: "{{conf}}/context.xml"
      backup: yes
      owner: tomcat7
      group: tomcat7
      content: |
        <?xml version='1.0' encoding='utf-8'?>
        <!-- deployed by ansible! -->
        <Context>
            <!-- Default set of monitored resources -->
            <WatchedResource>WEB-INF/web.xml</WatchedResource>
            <Resource
                name="jdbc/harvest_read"
                auth="Container"
                type="javax.sql.DataSource"
                factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory"
                driverClassName="org.postgresql.Driver"
                url="{{geoserver.jndi.url}}"
                username="{{geoserver.jndi.username}}"
                password="{{geoserver.jndi.password}}"
                validationQuery="SELECT 1"
                maxActive="5" maxIdle="3" maxWait="-1"
                testOnBorrow="true"
                testWhileIdle="true"
                testOnReturn="true"
                timeBetweenEvictionRunsMillis="30000"
                numTestsPerEvictionRun="3"
                minEvictableIdleTimeMillis="60000"
                defaultAutoCommit="true"
            />
        </Context>
    notify: restart-tomcat7

  # git module seems buggy, so force
  # need to allow local modifications
  #  - git: >
  #      repo=https://github.com/aodn/geoserver-config
  #      dest={{geoserver_config}}
  #      version=master
  #      force=no
  #    notify: restart-tomcat7

  - shell: creates={{geoserver_config}}/git-done {{item}}
    with_items:
      - git clone https://github.com/aodn/geoserver-config {{geoserver_config}}
      - cd {{geoserver_config}} && git checkout master
      - touch {{geoserver_config}}/git-done
    notify: restart-tomcat7

  # TODO use stylesheet for this...
  - copy:
      dest: "{{geoserver_config}}/security/usergroup/default/users.xml"
      backup: yes
      owner: tomcat7
      group: tomcat7
      content: |
        <?xml version="1.0" encoding="UTF-8"?>
        <userRegistry xmlns="http://www.geoserver.org/security/users" version="1.0">
          <users>
            <user enabled="true" name="admin" password="plain:{{geoserver.adminpass}}"/>
          </users>
          <groups>
          </groups>
        </userRegistry>


  - apt: name=libsaxonhe-java
  - set_fact: saxon=/usr/share/maven-repo/net/sf/saxon/Saxon-HE/debian/Saxon-HE-debian.jar

  - copy:
      dest: "{{geoserver_config}}/wps-enable.xslt"
      content: |
        <?xml version="1.0" encoding="UTF-8"?>
        <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsl">
          <xsl:template match="wps/enabled">
            <enabled>true</enabled>
          </xsl:template>
          <xsl:template match="@*|node()">
            <xsl:copy>
              <xsl:apply-templates select="@*|node()"/>
            </xsl:copy>
          </xsl:template>
        </xsl:stylesheet>

  - shell: chdir={{geoserver_config}} creates=wps-enabled {{item}}
    with_items:
      - cp wps.xml wps.orig.xml
      - java -jar {{saxon}} wps.orig.xml wps-enable.xslt > wps.xml
      - touch wps-enabled


  - file: path={{geoserver_config}} state=directory owner=tomcat7 group=tomcat7 recurse=yes


  # TODO
  # this war deploy code is the same as aatams.  ccould be factored out,
  # and the same as redeploy-war
  # or put in tomcat7 etc.
  - copy: src={{geoserver.war}} dest={{webapps}}/geoserver.war
    register: deployed

  - shell: "{{item}}"
    with_items:
      - systemctl stop tomcat7
      - rm -rf {{webapps}}/geoserver || true
      - echo > {{logs}}/catalina.out
    when: deployed.changed == true
    notify: restart-tomcat7


