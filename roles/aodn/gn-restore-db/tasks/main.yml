
  # communication is actually kind of horrid
  # copy db from host

  - copy: src={{geonetwork_postgres_dump}} dest=/ansible/gn.dump

  # check for database
  - shell: psql -tAc "select 1 from pg_database where datname='geonetwork'"
    become: yes
    become_user: postgres
    register: have_db
    changed_when: false

  # ok - there's an issue if the database name is different.
  # how do we handle this?

  # restore the db and hack an admin, admin account
  - name: Restore Geonetwork db
    shell: "{{item}}"
    become: yes
    become_user: postgres
    with_items:
      - |
        psql -d postgres -c "drop database if exists geonetwork"
        psql -d postgres -c "drop database if exists geonetwork_portal;"
      - |
        psql -d postgres -c "
          drop user if exists geonetwork;
          create user geonetwork password 'geonetwork';
          "
      - pg_restore -d postgres -x -C /ansible/gn.dump

      - psql -d postgres -c "alter database geonetwork_portal rename to geonetwork"
 

      - |
        psql -d geonetwork -c "
          update users
          set password='46e44386069f7cf0d4f2a420b9a2383a612f316e2024b0fe84052b0b96c479a23e8a0be8b90fb8c2'
          where name='admin'
          "
      - psql -d postgres -c "
          alter database geonetwork owner to geonetwork;
          "
 
    when: have_db.stdout != "1"
    # when: false


