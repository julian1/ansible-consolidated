
# TODO systemd rather than screen, and email on restart?
# do not assume monero user
# IMPORTANT binaries and scripts should be installed as root. so cannot be modified by unpriv account...

  - apt: name=sudo                  # for ansible for become_user
  - apt: name=ca-certificates       # for https to download binary
  - apt: name=rlwrap                # for client history
  - apt: name=screen
  - apt: name=net-tools             # netstat
  - apt: name=openvpn
  - apt: name=dnsutils              # dig
  # - apt: name=unzip                 # for binary


  # for arm...
  # https://downloads.getmonero.org/cli/linuxarm7

  # verify hash at, https://github.com/monero-project/monero/releases

  - get_url:
      #url: https://downloads.getmonero.org/cli/linux64
      url: https://downloads.getmonero.org/cli/monero-linux-x64-v0.12.3.0.tar.bz2
      dest: "{{workdir}}/linux64"
      # 0.11.1.0
      # checksum: sha256:6581506f8a030d8d50b38744ba7144f2765c9028d18d990beb316e13655ab248
      # 0.12.0.0 Lithium Luna
      # checksum: sha256:928ad08ff0dea2790c7777a70e610b2d33c35a5df5900fbb050cc8c659237636
      # v 0.12.2.0
      # checksum: sha256:cb97e3f8b700a81e1b0f1a77509eefbfb415aa6013f23685f8933b559309c580

      # v 0.12.3.0
      checksum: sha256:72fe937aa2832a0079767914c27671436768ff3c486597c3353a8567d9547487

    tags: monero

  - unarchive: src={{workdir}}/linux64 dest={{workdir}} copy=no
    tags: monero

  # TODO probably should expand $HOME here.
  - copy:
      dest: "{{workdir}}/vars.inc"
      content: |
        # deployed by ansible!
        # Note, we don't have a proper env var with versioned dir, so set manually

        # PATH="$HOME/monero-v0.11.1.0:$PATH"
        # PATH="$HOME/monero-v0.12.2.0:$PATH"
        PATH="$HOME/monero-v0.12.3.0:$PATH"

        export PATH
    tags: path

  # all these scripts should be root owned... with 755.
  - copy:
      dest: "{{workdir}}/start-monerod.sh"
      mode: 0755
      content: |
        #!/bin/bash -x
        # deployed by ansible!

        . ./vars.inc

        # 0.0.0.0 is only to allow remote client access...
        # monerod --rpc-bind-ip 0.0.0.0 --confirm-external-bind --restricted-rpc
        #  --out-peers 10 \

        # 10kB/s is  0.6MB/minute, 36MB/hr,  860MB/day.
        # 100kB/s is               360MB/hr, 8.6GB / day.
        # having more peers, means may get faster download options.
        #  --limit-rate-up 10 \
        #  --rpc-bind-ip 192.168.201.29 --confirm-external-bind --restricted-rpc

        # data dir should be fully spec

        monerod \
          --data-dir {{workdir}}/data \
          --limit-rate-up 30 \
          --p2p-bind-ip 10.8.0.6 \

    tags: whoot


  - copy:
      dest: "{{workdir}}/start-monero-cli.sh"
      mode: 0755
      content: |
        #!/bin/bash -x
        # deployed by ansible!

        . ./vars.inc

        # rlwrap monero-wallet-cli --daemon-address m-test:18081
        rlwrap monero-wallet-cli

    tags: whoot



#    - file: path={{workdir}}/scripts state=directory mode=777
#      tags: path

#    - copy:
#        dest: {{workdir}}/scripts/monero-tunnel.sh
#        mode: 0755
#        content: |
#          #!/bin/bash -x
#          # deployed by ansible!
#
#          ssh -N -L :18081:localhost:18081 m-test
#      tags: path


    # no do it with unpriviledged meteo account
    # ssh tunnel, requires private keys on the node that creates the tunnel

#    - apt: name=iptables-persistent
#      tags: iptables
#
#    - set_fact: rpc_port=18081
#      tags: iptables
#
#    - copy:
#        dest: /etc/iptables-rules
#        content: |
#          # deployed by ansible!
#
#          iptables -t filter --flush
#
#          iptables -A INPUT  -p tcp --dport {{rpc_port}} -s 127.0.0.1 -j ACCEPT
#          iptables -A OUTPUT -p tcp --sport {{rpc_port}} -d 127.0.0.1 -j ACCEPT
#
#          iptables -A INPUT  -p tcp --dport {{rpc_port}} -s 203.214.90.101 -j ACCEPT
#          iptables -A OUTPUT -p tcp --sport {{rpc_port}} -d 203.214.90.101 -j ACCEPT
#
#          iptables -A INPUT  -p tcp --dport {{rpc_port}} -j DROP
#          iptables -A OUTPUT -p tcp --sport {{rpc_port}} -j DROP
#      notify: reconfigure-iptables
#      tags: iptables


#  handlers:
#    - name: reconfigure-iptables
#      command: "{{item}}"
#      with_items:
#        - sh /etc/iptables-rules
#        - dpkg-reconfigure --frontend noninteractive iptables-persistent




