

  # needs var of user to install for should be configured for user meteo...

  # TODO get rid of /root/chef_install directory and use /ansible instead
  # or better use a register variable

  - file: path=/root/chef_install state=directory

# what a pile of shit this is

  - shell: chdir=/home/meteo  {{item}}
    become: yes
    become_user: meteo
    with_items:
      - chef gem uninstall net-ssh || true
      - chef gem uninstall knife-solo || true
      - chef gem uninstall berkshelf || true
      - rm -rf .chef .chefdk/

  # creates=chefdk-installed
  # - touch chefdk-installed

  - shell: chdir=/root/chef_install  {{item}}
    when: ansible_distribution == 'Debian'
    with_items:
      - dpkg --purge chefdk
      # - wget https://opscode-omnibus-packages.s3.amazonaws.com/debian/6/x86_64/chefdk_0.9.0-1_amd64.deb

      - wget 'https://packages.chef.io/files/stable/chefdk/0.14.25/debian/8/chefdk_0.14.25-1_amd64.deb'
      - dpkg -i chefdk_0.14.25-1_amd64.deb

      # - wget 'https://packages.chef.io/files/stable/chefdk/1.4.3/debian/8/chefdk_1.4.3-1_amd64.deb'
      # - dpkg -i chefdk_1.4.3-1_amd64.deb
  
  # creates=ansible-chefdk-configured
  # - touch ansible-chefdk-configured

  - shell: chdir=/home/meteo  {{item}}
    become: yes
    become_user: meteo
    with_items:

      - export "PATH=/home/meteo/.gem/ruby/2.3.0/bin:$PATH" && chef gem install knife-solo
      - export "PATH=/home/meteo/.gem/ruby/2.3.0/bin:$PATH" && chef gem install berkshelf
      #- chef gem install berkshelf

  # do this in ~/paths
  # - lineinfile: dest=/home/meteo/paths backup=true state=present insertafter=EOF line='export PATH=$PATH:$HOME/.chefdk/gem/ruby/2.1.0/bin'

