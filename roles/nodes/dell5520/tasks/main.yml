
# low level stuff
# its a real mistake to be mixing low level stuff - like udev, fstab, kernel modules with scripts, xconfig and timezones.



  #####
  # wireless
  # non-free firmware load for iwlwifi-7260-17.ucode  - worked!

# FEB 2020  manage locally.
#  - copy:
#      dest: /etc/fstab
#      backup: yes
#      content: |
#        # deployed by ansible!
#        # allow writing /dev/sdb device
#
#        # Use 'blkid' to print the universally unique identifier for a
#        # device; this may be used with UUID= as a more robust way to name devices
#        # that works even if disks are added and removed. See fstab(5).
#
#        # JA all of this is default
#        # <file system>                             <mount point> <type>  <options>       <dump>  <pass>
#        /dev/mapper/nvme0n1p4_crypt                 /             ext4    errors=remount-ro       0       1
#
#        # /boot was on /dev/nvme0n1p2 during installation
#        UUID=695d2c88-d939-4789-853f-3fb9668fb08b   /boot         ext4    defaults                0       2
#
#        # /boot/efi was on /dev/nvme0n1p1 during installation
#        UUID=2518-1278                              /boot/efi     vfat    umask=0077              0       1
#
#        # JA
#        # 2.5" ssd
#        UUID=2357e387-a4e0-49cb-9409-278d41c2975d   //mnt/drive   ext4  errors=remount-ro         0       2
#
#        # JA root ramdisk
#        tmpfs                                       /root         tmpfs   rw,nodev,nosuid,size=1G 0       0
#


# FEB 2020 see plays/admin/wicd-curses.yml
#  - apt: name=firmware-iwlwifi   # needs non-free in sources
#
#  - apt: name=wireless-tools  # iwconfig - useful to check wlan1 state
#  - apt: name=iw
#
#  - apt: name=wicd-curses


# low level configuration
# we should not be mixing low level stuff - like udev, fstab, mirrors,  with scripts and timezoes.

  # root user (no ssh)
  - user:
      name: root
      shell: /bin/bash

  # note staff group has same security implications as root, since can put binaries in /usr/local/bin and usurp root privileges
  # so must be trusted

  # non-priv user (no ssh)
  - user: >
      name=me
      shell=/bin/bash
      groups=docker,staff,sudo,plugdev,tty,cdrom,floppy,audio,dip,video,netdev,bluetooth


  # set more restrictive permissions
  - file: >
      path=/home/me
      mode=0700
      owner=me
      group=me
      state=directory



  # make thumbdrive device writable for dd, by unpriviledged user
  # means lower risk - if can avoid su root...
  - copy:
      dest: /lib/udev/rules.d/99-z.rules
      content: |
        # deployed by ansible!
        # allow writing /dev/sdb device

        # to reload,
        # udevadm control --reload-rules && udevadm trigger
        # KERNEL=="sdb", SUBSYSTEM=="block", ATTRS{idVendor}=="058f", ATTRS{idProduct}=="6387", MODE="0666", OWNER="me"
        SUBSYSTEM=="block", ATTRS{idVendor}=="058f", ATTRS{idProduct}=="6387", MODE="0666", OWNER="me"



  ####
  # Bluetooth
  # also, disable bluetooth with systemd
  # https://askubuntu.com/questions/744640/best-way-to-deactivate-bluetooth-on-system-startup-with-systemd-and-not-upstar
  #
  # systemctl stop bluetooth.service
  # systemctl disable bluetooth.service
  # systemctl status bluetooth.service


  # should be moved to xmonad  maybe as a file



