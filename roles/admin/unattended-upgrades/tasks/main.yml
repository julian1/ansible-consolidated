
# see,
# https://wiki.debian.org/UnattendedUpgrades
# https://www.2daygeek.com/automatic-security-update-unattended-upgrades-ubuntu-debian/
# https://www.tecmint.com/auto-install-security-updates-on-debian-and-ubuntu/

# logs location,
# ls /var/log/unattended-upgrades/

# *very-useful*, use this to test/debug
# unattended-upgrade -d

# mail would require both mailx/bsd-mailx and postfix to be installed.
# see, https://www.binarytides.com/linux-mailx-command/

# TODO add mail address to vars file credentials.yml


- debug: msg="unattended-upgrades, hostname {{ ansible_hostname }}," #"

- apt: name=unattended-upgrades
- apt: name=apt-listchanges


# policy
- copy:
    dest:  /etc/apt/apt.conf.d/20auto-upgrades
    backup: yes
    content: |
      // deployed by ansible!
      //
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Unattended-Upgrade "1";
      // JA
      APT::Periodic::Verbose "2";

  notify: reconfigure-unattended-upgrades


# configuration
- copy:
    dest: //etc/apt/apt.conf.d/50unattended-upgrades
    backup: yes
    content: |
      // deployed by ansible!
      //

      Unattended-Upgrade::Origins-Pattern {
              // Codename based matching:
              // This will follow the migration of a release through different
              // archives (e.g. from testing to stable and later oldstable).
      //      "o=Debian,n=jessie";
      //      "o=Debian,n=jessie-updates";
      //      "o=Debian,n=jessie-proposed-updates";
      //      "o=Debian,n=jessie,l=Debian-Security";

              // Archive or Suite based matching:
              // Note that this will silently match a different release after
              // migration to the specified archive (e.g. testing becomes the
              // new stable).
      //      "o=Debian,a=stable";
      //      "o=Debian,a=stable-updates";
      //      "o=Debian,a=proposed-updates";
              "origin=Debian,codename=${distro_codename},label=Debian-Security";
      };

      // List of packages to not update (regexp are supported)
      Unattended-Upgrade::Package-Blacklist {
      //  "vim";
      //  "libc6";
      //  "libc6-dev";
      //  "libc6-i686";
      };

      // This option allows you to control if on a unclean dpkg exit
      // unattended-upgrades will automatically run
      //   dpkg --force-confold --configure -a
      // The default is true, to ensure updates keep getting installed
      //Unattended-Upgrade::AutoFixInterruptedDpkg "false";

      // Split the upgrade into the smallest possible chunks so that
      // they can be interrupted with SIGUSR1. This makes the upgrade
      // a bit slower but it has the benefit that shutdown while a upgrade
      // is running is possible (with a small delay)
      //Unattended-Upgrade::MinimalSteps "true";

      // Install all unattended-upgrades when the machine is shuting down
      // instead of doing it in the background while the machine is running
      // This will (obviously) make shutdown slower
      //Unattended-Upgrade::InstallOnShutdown "true";

      // Send email to this address for problems or packages upgrades
      // If empty or unset then no email is sent, make sure that you
      // have a working mail setup on your system. A package that provides
      // 'mailx' must be installed. E.g. "user@example.com"
      // JA
      Unattended-Upgrade::Mail "root";

      // Set this value to "true" to get emails only on errors. Default
      //Unattended-Upgrade::MailOnlyOnError "true";

      // Do automatic removal of new unused dependencies after the upgrade
      // (equivalent to apt-get autoremove)
      //Unattended-Upgrade::Remove-Unused-Dependencies "false";

      // Automatically reboot *WITHOUT CONFIRMATION* if
      //  the file /var/run/reboot-required is found after the upgrade
      // JA
      Unattended-Upgrade::Automatic-Reboot "true";

      // Automatically reboot even if there are users currently logged in.
      // JA
      Unattended-Upgrade::Automatic-Reboot-WithUsers "true";

      // If automatic reboot is enabled and needed, reboot at the specific
      // time instead of immediately
      //  Default: "now"
      //Unattended-Upgrade::Automatic-Reboot-Time "02:00";

      // Use apt bandwidth limit feature, this example limits the download
      // speed to 70kb/sec
      //Acquire::http::Dl-Limit "70";

      // Enable logging to syslog. Default is False
      // JA
      Unattended-Upgrade::SyslogEnable "true";

      // Specify syslog facility. Default is daemon
      // Unattended-Upgrade::SyslogFacility "daemon";

  notify: reconfigure-unattended-upgrades


# notify root mail
#- lineinfile: >
#    backup=yes
#    dest=/etc/apt/apt.conf.d/50unattended-upgrades
#    state=present
#    regexp='.*Unattended-Upgrade::Mail .*'
#    line='Unattended-Upgrade::Mail "root";'
#
#  notify: reconfigure-unattended-upgrades
#

