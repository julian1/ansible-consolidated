
- hosts: 
    - rev-proxy.localnet
  vars:
    - users:
      - { name: meteo, group: adm, pubkey: "{{meteo_pubkey}}" }
  vars_files:
    - "{{inventory_dir | dirname}}/credentials.yml"
  roles:
    - jessie
    - update
    - timezone
    - locale
    - common
    - meteo-dotfiles
  tasks:
    # apache
    - apt: name=apache2

    # mod proxy
    - apt: name=libapache2-mod-proxy-html

    # enable proxy
    - apache2_module: name={{item}} state=present
      with_items:
        - proxy
        - proxy_http
        - proxy_html
        - ssl

    # - command: a2enmod proxy proxy_http
    # - command: a2enmod proxy proxy_html

    # https://cumptrnrd.wordpress.com/2013/04/21/securing-apache-content-with-basic-authentication-on-ubuntu/
    #- command: a2enmod auth_basic
    #- command: a2enmod authn_file
    #- command: a2enmod authz_user


    # remove default site
    - command: a2dissite 000-default.conf
      args:
        removes: /etc/apache2/sites-enabled/000-default.conf



    # TODO control docroot with var
    # tmp dir for files
    - file: path=/var/www/html     state=directory mode=0755
    - file: path=/var/www/html/tmp state=directory mode=0755

    # document root
    - copy:
        dest: /var/www/html/index.html
        content: |
          <!DOCTYPE html>
          <html>
            <body>
              <h1>Woot!!</h1>
              <ul>
                <video width="320" height="240" controls>
                  <source src="/tmp/magic-dirt.mp4" type="video/mp4">
                </video>
                <video width="320" height="240" controls>
                  <source src="/tmp/output.mp4" type="video/mp4">
                </video>


                <li><a href="/tmp">tmp</a></li>
                <li><a href="/aatams">aatams</a></li>
                <li><a href="/geoserver">geoserver</a></li>
                <li><a href="/geonetwork">geonetwork</a></li>
                <li><a href="/portal">portal</a></li>
                <li><a href="/wp">wordpress</a></li>
              </ul>
            </body>
          </html>

    # TODO authentification...

    # reverse proxy
    - blockinfile:
        dest: /etc/apache2/sites-available/default.conf
        create: true
        content: |
          <VirtualHost *:80>

            DocumentRoot      /var/www/html

            # Require all granted

            # eg.
            ProxyPass         /mcp2   http://mcp2.aodn.org.au
            ProxyPassReverse  /mcp2   http://mcp2.aodn.org.au 

            ProxyPass         /schemas http://schemas.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com
            ProxyPassReverse  /schemas http://schemas.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com

            ProxyPass         /content http://content.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com
            ProxyPassReverse  /content http://content.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com

            ProxyPass         /aatams http://aatams:8080/aatams
            ProxyPassReverse  /aatams http://aatams:8080/aatams

            ProxyPass         /search http://portal.aodn.org.au/search
            ProxyPassReverse  /search http://portal.aodn.org.au/search

            # OLD
            # ProxyPass         /portal http://portal:8080/portal
            # ProxyPassReverse  /portal http://portal:8080/portal

            # ProxyPass         /geonetwork http://geonetwork2:8080/geonetwork
            # ProxyPassReverse  /geonetwork http://geonetwork2:8080/geonetwork

            # ProxyPass         /geoserver http://geoserver:8080/geoserver
            # ProxyPassReverse  /geoserver http://geoserver:8080/geoserver

            # ProxyPass         /wp http://wordpress/wp
            # ProxyPassReverse  /wp http://wordpress/wp


            #<Location /geoserver>
            #  AuthType Basic
            #  AuthName "Secure Content"
            #  AuthBasicProvider file
            #  AuthUserFile /etc/apache2/passwords
            #  Require valid-user
            #</Location>

            # Rewriting URLs in hyperlinks
            # ProxyHTMLEnable On
            # ProxyHTMLExtended On
            # ProxyHTMLURLMap http://apache/geonetwork2  /geonetwork
          </VirtualHost>


          <VirtualHost *:443>
            DocumentRoot      /var/www/html

            # eg.
            ProxyPass         /mcp2   http://mcp2.aodn.org.au
            ProxyPassReverse  /mcp2   http://mcp2.aodn.org.au 

            ProxyPass         /schemas http://schemas.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com
            ProxyPassReverse  /schemas http://schemas.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com

            ProxyPass         /content http://content.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com
            ProxyPassReverse  /content http://content.aodn.org.au.s3-website-ap-southeast-2.amazonaws.com

            ProxyPass         /aatams http://aatams:8080/aatams
            ProxyPassReverse  /aatams http://aatams:8080/aatams

            ProxyPass         /search http://portal.aodn.org.au/search
            ProxyPassReverse  /search http://portal.aodn.org.au/search

            SSLEngine On
            SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
            SSLCertificateKeyFile   /etc/ssl/private/ssl-cert-snakeoil.key
            # SSLCertificateChainFile /etc/ssl/certs/aodn.org.au.chain.crt

          </VirtualHost>


      notify: reload-apache2

    # enable
    - command: a2ensite default
      args:
        creates: /etc/apache2/sites-enabled/default.conf


  handlers:
    - name: reload-apache2
      command: service apache2 reload

