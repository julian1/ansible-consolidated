
# Based on https://wiki.debian.org/WordPress

- hosts:
    - wordpress
    - aodnblog
    - aodnblog2
  vars_files:
    - ../vars/credentials.yml
  vars:
    - users:
      - { name: meteo,    group: adm, pubkey: "{{meteo_pubkey}}" }
  roles:
    - debian
    - timezone
    - locale
    - common
    - dotfiles
  tasks:
    - apt: name=mysql-server
    - apt: name=apache2
    - apt: name=wordpress

#    #################
#    # NEW STUFF
#    # remove default site
#    - command: a2dissite 000-default.conf
#      args:
#        removes: /etc/apache2/sites-enabled/000-default.conf
#
#    # default
#    - blockinfile:
#        dest: /etc/apache2/sites-available/default.conf
#        create: true
#        content: |
#          <VirtualHost *:80>
#            DocumentRoot      /var/www/html
#          </VirtualHost>
#      notify: reload-apache2
#
#    # enable
#    - command: a2ensite default
#      args:
#        creates: /etc/apache2/sites-enabled/default.conf
#
#    # document root
#    - copy:
#        dest: /var/www/html/index.html
#        content: |
#          <!DOCTYPE html>
#          <html>
#            <body>
#              <h1>Woot!!</h1>
#            </body>
#          </html>

    #################
    # END NEW STUFF


    - file: path="{{item}}" state=directory recurse=yes owner=www-data group=www-data
      with_items:
        - /var/lib/wordpress
        - /usr/share/wordpress

    - copy:
        dest: /etc/apache2/sites-available/wp.conf
        content: |
          # deployed by ansible...
          # Why no virtual host?
          Alias /wp/wp-content /var/lib/wordpress/wp-content
          Alias /wp /usr/share/wordpress
          <Directory /usr/share/wordpress>
              Options FollowSymLinks
              AllowOverride Limit Options FileInfo
              DirectoryIndex index.php
              Require all granted
          </Directory>
          <Directory /var/lib/wordpress/wp-content>
              Options FollowSymLinks
              Require all granted
          </Directory>

      notify: reload-apache2

    - command: a2ensite wp
      args:
        creates: /etc/apache2/sites-enabled/wp.conf

    #################
    # web site should now be up and accessible, http://host/wp/

    - copy:
        dest: /etc/wordpress/config-default.php
        # TODO deployed by ansible...
        # define('WP_ALLOW_REPAIR', true);
        content: |
          <?php
          define('DB_NAME', 'wordpress');
          define('DB_USER', 'wordpress');
          define('DB_PASSWORD', 'wordpress');
          define('DB_HOST', 'localhost');
          define('WP_CONTENT_DIR', '/var/lib/wordpress/wp-content');


          define('DB_CHARSET', 'utf8');
          define('DB_COLLATE', '');
          ?>

    - copy:
        dest: /ansible/wp.sql
        content: |
          CREATE DATABASE if not exists wordpress;
          GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER
          ON wordpress.*
          TO wordpress@localhost
          IDENTIFIED BY 'wordpress';
          FLUSH PRIVILEGES;
      register: whoot

    # No default root password for myql on first install
    - shell: mysql -u root < /ansible/wp.sql
      when: whoot.changed == true

    # apche support large file upload
    # Note: that max_file_uploads = 20 didn't prevent bulk upload of more than 20 images...
    - lineinfile: >
        dest=/etc/php5/apache2/php.ini
        state=present
        backrefs=yes
        regexp='upload_max_filesize.*'
        line='upload_max_filesize = 32M'
      notify: reload-apache2

    - lineinfile: >
        dest=/etc/php5/apache2/php.ini
        state=present
        backrefs=yes
        regexp='post_max_size.*'
        line='post_max_size = 32M'
      notify: reload-apache2


    # Useful enough to be included here, TODO use system path or just put in /ansible and use args.
    - copy:
        dest: /home/meteo/backup.sh
        mode: 0755
        content: |
          #!/bin/bash -x
          # deployed by ansible!
          DIR=backup-$(date '+%F-%H-%M')
          mkdir $DIR
          cp -rp /var/lib/wordpress/ $DIR
          mysqldump --opt -u root wordpress > $DIR/wordpress.dump

    - copy:
        dest: /home/meteo/restore.sh
        mode: 0755
        content: |
          #!/bin/bash -x
          # deployed by ansible!
          # must be run as sudo for permissions, and without using wp gui first
          DIR=$1
          rm -rf /var/lib/wordpress/ || exit
          cp -rp $DIR/wordpress /var/lib/ || exit
          chown -R www-data:  /var/lib/wordpress/ || exit
          mysql -u root wordpress < $DIR/wordpress.dump || exit
          mysql -u root wordpress -e "update wp_options set option_value = 'http://aodnblog2/wp' where option_name = 'siteurl'" || exit
          mysql -u root wordpress -e "update wp_options set option_value = 'http://aodnblog2/wp' where option_name = 'home'" || exit

          # https://codex.wordpress.org/Converting_Database_Character_Sets
          # SHOW FULL COLUMNS FROM wordpress.wp_posts;
          # ALTER DATABASE wordpress CHARACTER SET utf8;
          # ALTER TABLE wp_posts CHARACTER SET utf8;
          # alter table wp_posts change post_content post_content LONGTEXT CHARACTER SET utf8;

  handlers:
    - name: reload-apache2
      command: service apache2 reload

