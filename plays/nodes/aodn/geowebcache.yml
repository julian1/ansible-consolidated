
- hosts:
    - geowebcache.localnet
  vars_files:
    - "{{lookup('env','PWD')}}/credentials.yml"
  vars:
    - users:
      - { name: meteo,  group: adm, pubkey: "{{meteo_pubkey}}", home_dir: /home/meteo }
      - { name: root,   group: ,    pubkey: "{{meteo_pubkey}}", home_dir: /root }

    # this is pretty sucky, would be nicer to specify
    - jdk_deploy_path: /var/lib/tomcat7/
    # - warpath: '/home/meteo/imos/geowebcache/geowebcache.war'
    # - warpath: '/home/meteo//imos/geowebcache/geowebcache/web/target/geowebcache.war'
    - warpath: /home/meteo/imos/geowebcache/geowebcache/web/target/geowebcache.war
    - warname: geowebcache.war

    # ansible-playbook ./plays/deploy-war.yml -i geowebcache.localnet, --extra-vars "warpath=~/imos/geowebcache/geowebcache/web/target/geowebcache.war warname=geowebcache.war"
 
  # whot is deploying this? tomcat shouldn't be started
 
  roles:
    - jessie
    - apt-update
    - sshd
    - timezone
    - locale
    - common
    - users
    - dotfiles

    - devel/tomcat-bash-aliases
    - devel/root-bash-aliases

    # keep deployment separate from the configuration,
    - tomcat-port-forward
    # - deploy-war


  # TODO, there's an order problem here, that the deploy-war happens before the proper tomca
  # environmnet is set up.
  tasks:

    # install tomcat7
    - apt: name=libxml2-utils
    - apt: name=tomcat7


    # create conf dir,
    # note this is the same as /etc/tomcat7/geowebcache/
    # since /var/lib/tomcat7/conf -> /etc/tomcat7
    - file: >
        path=/var/lib/tomcat7/conf/geowebcache
        state=directory
        owner=tomcat7 group=tomcat7

    # this can only be done after the application is exploded
    # NOTE also have to set im ./webapps/ROOT/WEB-INF/classes/log4j.properties and set info to debug for stdout first line to log it

    # tomcat logging configuration - this does nothing.
    # - copy: >
    #     dest=/var/lib/tomcat7/conf/logging.properties
    #     owner=tomcat7 group=tomcat7
    #     src=../roles/geowebcache/files/logging.properties
    #  notify: restart-tomcat7
    #  tags: whoot


    # anyone can write the log for easier truncation with echo
    - file: >
        path=/var/lib/tomcat7/logs/catalina.out
        owner=tomcat7 group=tomcat7
        mode=666

    # install java 8 to /var/lib/tomcat7
    - include: ../roles/devel/tasks/jdk-1.8.yml


    # set up tomcat7 to use java 1.8
    - copy:
        dest: /etc/default/tomcat7
        content: |
          # deployed by ansible!
          TOMCAT7_USER=tomcat7
          TOMCAT7_GROUP=tomcat7
          JAVA_HOME=/var/lib/tomcat7/jdk1.8.0_111/
          JAVA_OPTS="${JAVA_OPTS} -DGEOWEBCACHE_CACHE_DIR=/var/lib/tomcat7/conf/geowebcache \
            -Xmx4081m -Xms512m -server -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError \
            -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
      notify: restart-tomcat7


    # the war must be deployed first, before changing the exploded file, geowebcache-core-context.xml
    - include: '../roles/deploy-war/tasks/main.yml'


    # all this configuration is inside the exploded war which is hideous...
    - copy:
        dest: /var/lib/tomcat7/webapps/geowebcache/WEB-INF/geowebcache-core-context.xml
        src:  ../roles/geowebcache/files/geowebcache-core-context.xml
      notify: restart-tomcat7
      tags: whoot


    - copy:
        dest: /var/lib/tomcat7/conf/geowebcache/geowebcache.xml
        src: '../roles/geowebcache/files/geowebcache.xml'
      notify: restart-tomcat7
      tags: whoot


  handlers:
    - name: restart-tomcat7
      service: name=tomcat7 state=restarted


