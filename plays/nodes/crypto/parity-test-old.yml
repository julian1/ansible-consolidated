
OBSOLETE
  use parity play, and solidiyt play and node play. 
  not sure we even want solidity in the same user/group space. OK. if no keys

  - actually no. they are pretty client side...

# Note, 1G is not enough mem for the compile, needs swap.

- hosts: all
  vars_files:
    - "{{inventory_dir | dirname}}/credentials.yml"
  vars:

  pre_tasks:
    # TODO disable password sshd, if have password based sudo

    - user: name=meteo shell=/bin/bash password={{meteo_password}} groups=sudo
    - file: path=/home/meteo mode=0700 owner=meteo group=meteo state=directory

    - authorized_key: user=meteo key="{{meteo_pubkey}}"

  roles:
    - admin/devenv-lite

    - name: admin/swap
      size: 1000000

    - name: devel/rust
      user: meteo

    - name: crypto/parity
      build_dir: /home/meteo/parity
      user: meteo

    - name: devel/node
      deploy_path: /home/meteo

    - name: crypto/web3
      user: meteo

    - name: crypto/solidity
      user: meteo
      tags: solidity

  tasks:
    - copy:
        owner: meteo
        group: meteo
        mode: 400
        dest: /home/meteo/.bash_aliases
        content: |
          # deployed by ansible!

          PATH="$HOME/parity/target/release:$PATH"
          PATH="$HOME/node-v6.11.0-linux-x64/bin:$PATH"
          PATH="$HOME/solidity/build/solc:$PATH"
          PATH="$HOME/solidity/build/lllc:$PATH"

          export PATH
      tags: path

    - copy:
        owner: meteo
        group: meteo
        mode: 0700
        dest: /home/meteo/start-parity.sh
        content: |
          #!/bin/bash
          # deployed by ansible!

          # parity -d data --min-peers 8 --max-peers 12 --no-color --pruning fast --pruning-history 16
          parity -d data --no-ui --no-dapps --min-peers 8 --max-peers 12 --no-color --pruning fast
      tags: path

    # for opening
    # parity -d data --max-peers 8 --no-color --jsonrpc-interface all --jsonrpc-hosts all
    # we would expect to be doing ssl using apache etc

    # https://github.com/paritytech/parity/wiki/Wallet-Remote-Access#recommended-ssh-tunneling





    # eg. ssh -L :8545:localhost:8545  p-test

#    - apt: name=iptables-persistent
#      tags: iptables
#
#    - copy:
#        dest: /etc/iptables-rules
#        content: |
#          # deployed by ansible!
#
#          iptables -t filter --flush
#
#          iptables -A INPUT  -p tcp --dport 8545 -s 127.0.0.1 -j ACCEPT
#          iptables -A OUTPUT -p tcp --sport 8545 -d 127.0.0.1 -j ACCEPT
#
#          iptables -A INPUT  -p tcp --dport 8545 -s 203.214.90.101 -j ACCEPT
#          iptables -A OUTPUT -p tcp --sport 8545 -d 203.214.90.101 -j ACCEPT
#
#          iptables -A INPUT  -p tcp --dport 8545 -j DROP
#          iptables -A OUTPUT -p tcp --sport 8545 -j DROP
#      notify: reconfigure-iptables
#      tags: iptables
#
#
#  handlers:
#    - name: reconfigure-iptables
#      command: "{{item}}"
#      with_items:
#        - sh /etc/iptables-rules
#        - dpkg-reconfigure --frontend noninteractive iptables-persistent
#



  # hmmn, if we just set-up a local parity it might work out of the box...

  # did not
  # curl https://install.meteor.com/ | sh
  # npm install  meteor-build-client

